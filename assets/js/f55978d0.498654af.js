/*! For license information please see f55978d0.498654af.js.LICENSE.txt */
"use strict";(self.webpackChunkdocumentation=self.webpackChunkdocumentation||[]).push([[32276],{15204:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>u,contentTitle:()=>i,default:()=>c,frontMatter:()=>a,metadata:()=>o,toc:()=>p});var r=t(17624),s=t(4552);const a={title:"XML API",sidebar_position:3},i="Channel-X XML API",o={id:"apis/for-buyers/channel-x-push-buyers-api/making-requests/xml-api",title:"XML API",description:"Channel-X Push Buyers API is a travel API based on XML. All requests are expected to be standard HTTP POST requests, with the POST body containing the XML request within a SOAP envelope.",source:"@site/docs/apis/for-buyers/channel-x-push-buyers-api/making-requests/xml-api.mdx",sourceDirName:"apis/for-buyers/channel-x-push-buyers-api/making-requests",slug:"/apis/for-buyers/channel-x-push-buyers-api/making-requests/xml-api",permalink:"/docs/apis/for-buyers/channel-x-push-buyers-api/making-requests/xml-api",draft:!1,unlisted:!1,editUrl:"https://github.com/Travelgate/documentation/tree/main/docs/apis/for-buyers/channel-x-push-buyers-api/making-requests/xml-api.mdx",tags:[],version:"current",sidebarPosition:3,frontMatter:{title:"XML API",sidebar_position:3},sidebar:"docsSidebar",previous:{title:"Request Headers",permalink:"/docs/apis/for-buyers/channel-x-push-buyers-api/making-requests/request-headers"},next:{title:"Overview",permalink:"/docs/apis/for-buyers/channel-x-push-buyers-api/availability-rates-and-inventory/overview"}},u={},p=[];function l(e){const n={h1:"h1",p:"p",...(0,s.M)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.h1,{id:"channel-x-xml-api",children:"Channel-X XML API"}),"\n",(0,r.jsx)(n.p,{children:"Channel-X Push Buyers API is a travel API based on XML. All requests are expected to be standard HTTP POST requests, with the POST body containing the XML request within a SOAP envelope."}),"\n",(0,r.jsx)(n.p,{children:"In the Channel-X Push Buyers API framework, we push information regarding Availability, Rates, and Inventory (ARI) to your system. We will initiate this process by sending you a request containing the relevant data. If the operation goes well, we expect a sucess response from your end; otherwise, we anticipate receiving an error notification."})]})}function c(e={}){const{wrapper:n}={...(0,s.M)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(l,{...e})}):l(e)}},44808:(e,n,t)=>{var r=t(11504),s=Symbol.for("react.element"),a=Symbol.for("react.fragment"),i=Object.prototype.hasOwnProperty,o=r.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED.ReactCurrentOwner,u={key:!0,ref:!0,__self:!0,__source:!0};function p(e,n,t){var r,a={},p=null,l=null;for(r in void 0!==t&&(p=""+t),void 0!==n.key&&(p=""+n.key),void 0!==n.ref&&(l=n.ref),n)i.call(n,r)&&!u.hasOwnProperty(r)&&(a[r]=n[r]);if(e&&e.defaultProps)for(r in n=e.defaultProps)void 0===a[r]&&(a[r]=n[r]);return{$$typeof:s,type:e,key:p,ref:l,props:a,_owner:o.current}}n.Fragment=a,n.jsx=p,n.jsxs=p},17624:(e,n,t)=>{e.exports=t(44808)},4552:(e,n,t)=>{t.d(n,{I:()=>o,M:()=>i});var r=t(11504);const s={},a=r.createContext(s);function i(e){const n=r.useContext(a);return r.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:i(e.components),r.createElement(a.Provider,{value:n},e.children)}}}]);