"use strict";(self.webpackChunkdocumentation=self.webpackChunkdocumentation||[]).push([[74685],{3905:(e,t,r)=>{r.d(t,{Zo:()=>u,kt:()=>f});var l=r(67294);function n(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function a(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);t&&(l=l.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,l)}return r}function s(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?a(Object(r),!0).forEach((function(t){n(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):a(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function o(e,t){if(null==e)return{};var r,l,n=function(e,t){if(null==e)return{};var r,l,n={},a=Object.keys(e);for(l=0;l<a.length;l++)r=a[l],t.indexOf(r)>=0||(n[r]=e[r]);return n}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(l=0;l<a.length;l++)r=a[l],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(n[r]=e[r])}return n}var i=l.createContext({}),p=function(e){var t=l.useContext(i),r=t;return e&&(r="function"==typeof e?e(t):s(s({},t),e)),r},u=function(e){var t=p(e.components);return l.createElement(i.Provider,{value:t},e.children)},c="mdxType",m={inlineCode:"code",wrapper:function(e){var t=e.children;return l.createElement(l.Fragment,{},t)}},d=l.forwardRef((function(e,t){var r=e.components,n=e.mdxType,a=e.originalType,i=e.parentName,u=o(e,["components","mdxType","originalType","parentName"]),c=p(r),d=n,f=c["".concat(i,".").concat(d)]||c[d]||m[d]||a;return r?l.createElement(f,s(s({ref:t},u),{},{components:r})):l.createElement(f,s({ref:t},u))}));function f(e,t){var r=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var a=r.length,s=new Array(a);s[0]=d;var o={};for(var i in t)hasOwnProperty.call(t,i)&&(o[i]=t[i]);o.originalType=e,o[c]="string"==typeof e?e:n,s[1]=o;for(var p=2;p<a;p++)s[p]=r[p];return l.createElement.apply(null,s)}return l.createElement.apply(null,r)}d.displayName="MDXCreateElement"},94070:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>i,contentTitle:()=>s,default:()=>m,frontMatter:()=>a,metadata:()=>o,toc:()=>p});var l=r(87462),n=(r(67294),r(3905));const a={title:"XML API",sidebar_position:3},s="Legacy Sellers XML API",o={unversionedId:"apis/for-sellers/hotel-pull-sellers-api/making-requests/xml-api",id:"apis/for-sellers/hotel-pull-sellers-api/making-requests/xml-api",title:"XML API",description:"Legacy Pull Sellers API is a travel API based on XML. All requests are expected to be standard HTTP POST requests in which the POST body is the request XML in a SOAP envelope.",source:"@site/docs/apis/for-sellers/hotel-pull-sellers-api/making-requests/xml-api.mdx",sourceDirName:"apis/for-sellers/hotel-pull-sellers-api/making-requests",slug:"/apis/for-sellers/hotel-pull-sellers-api/making-requests/xml-api",permalink:"/docs/apis/for-sellers/hotel-pull-sellers-api/making-requests/xml-api",draft:!1,editUrl:"https://github.com/Travelgate/documentation/tree/main/docs/apis/for-sellers/hotel-pull-sellers-api/making-requests/xml-api.mdx",tags:[],version:"current",sidebarPosition:3,frontMatter:{title:"XML API",sidebar_position:3},sidebar:"docsSidebar",previous:{title:"Request Headers",permalink:"/docs/apis/for-sellers/hotel-pull-sellers-api/making-requests/request-headers"},next:{title:"Common Elements",permalink:"/docs/apis/for-sellers/hotel-pull-sellers-api/making-requests/common-elements"}},i={},p=[],u={toc:p},c="wrapper";function m(e){let{components:t,...r}=e;return(0,n.kt)(c,(0,l.Z)({},u,r,{components:t,mdxType:"MDXLayout"}),(0,n.kt)("h1",{id:"legacy-sellers-xml-api"},"Legacy Sellers XML API"),(0,n.kt)("p",null,"Legacy Pull Sellers API is a travel API based on XML. All requests are expected to be standard HTTP POST requests in which the POST body is the request XML in a SOAP envelope."),(0,n.kt)("p",null,"In the Legacy Pull Sellers API framework, The Buyer will need to submit a request to Travelgate's system. Subsequently, Travelgate will validate the format and forward it to the Seller's endpoint. The Seller will receive the request, generate a response following Travelgate API, and send it back, once again forwarding it to Travelgate, which will, in turn, relay it to the Buyer."))}m.isMDXComponent=!0}}]);