"use strict";(self.webpackChunkdocumentation=self.webpackChunkdocumentation||[]).push([[21651],{3905:(e,t,r)=>{r.d(t,{Zo:()=>c,kt:()=>m});var a=r(67294);function n(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function i(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,a)}return r}function o(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?i(Object(r),!0).forEach((function(t){n(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):i(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function s(e,t){if(null==e)return{};var r,a,n=function(e,t){if(null==e)return{};var r,a,n={},i=Object.keys(e);for(a=0;a<i.length;a++)r=i[a],t.indexOf(r)>=0||(n[r]=e[r]);return n}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(a=0;a<i.length;a++)r=i[a],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(n[r]=e[r])}return n}var l=a.createContext({}),u=function(e){var t=a.useContext(l),r=t;return e&&(r="function"==typeof e?e(t):o(o({},t),e)),r},c=function(e){var t=u(e.components);return a.createElement(l.Provider,{value:t},e.children)},p="mdxType",y={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},d=a.forwardRef((function(e,t){var r=e.components,n=e.mdxType,i=e.originalType,l=e.parentName,c=s(e,["components","mdxType","originalType","parentName"]),p=u(r),d=n,m=p["".concat(l,".").concat(d)]||p[d]||y[d]||i;return r?a.createElement(m,o(o({ref:t},c),{},{components:r})):a.createElement(m,o({ref:t},c))}));function m(e,t){var r=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var i=r.length,o=new Array(i);o[0]=d;var s={};for(var l in t)hasOwnProperty.call(t,l)&&(s[l]=t[l]);s.originalType=e,s[p]="string"==typeof e?e:n,o[1]=s;for(var u=2;u<i;u++)o[u]=r[u];return a.createElement.apply(null,o)}return a.createElement.apply(null,r)}d.displayName="MDXCreateElement"},96725:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>l,contentTitle:()=>o,default:()=>y,frontMatter:()=>i,metadata:()=>s,toc:()=>u});var a=r(87462),n=(r(67294),r(3905));const i={sidebar_position:1},o="Overview",s={unversionedId:"apis/for-buyers/channel-x-push-buyers-api/availability-rates-and-inventory/overview",id:"apis/for-buyers/channel-x-push-buyers-api/availability-rates-and-inventory/overview",title:"Overview",description:"In the case of the Channel-X API, TravelgateX will send requests to the Buyer's system, to your system. This API has three main methods; your task will be to configure your system to handle the requests of each of the methods:",source:"@site/docs/apis/for-buyers/channel-x-push-buyers-api/availability-rates-and-inventory/overview.mdx",sourceDirName:"apis/for-buyers/channel-x-push-buyers-api/availability-rates-and-inventory",slug:"/apis/for-buyers/channel-x-push-buyers-api/availability-rates-and-inventory/overview",permalink:"/docs/apis/for-buyers/channel-x-push-buyers-api/availability-rates-and-inventory/overview",draft:!1,editUrl:"https://github.com/Travelgate/documentation/tree/main/docs/apis/for-buyers/channel-x-push-buyers-api/availability-rates-and-inventory/overview.mdx",tags:[],version:"current",sidebarPosition:1,frontMatter:{sidebar_position:1},sidebar:"docsSidebar",previous:{title:"XML API",permalink:"/docs/apis/for-buyers/channel-x-push-buyers-api/making-requests/xml-api"},next:{title:"Inventory",permalink:"/docs/apis/for-buyers/channel-x-push-buyers-api/availability-rates-and-inventory/inventory"}},l={},u=[],c={toc:u},p="wrapper";function y(e){let{components:t,...r}=e;return(0,n.kt)(p,(0,a.Z)({},c,r,{components:t,mdxType:"MDXLayout"}),(0,n.kt)("h1",{id:"overview"},"Overview"),(0,n.kt)("p",null,"In the case of the Channel-X API, TravelgateX will send requests to the Buyer's system, to your system. This API has three main methods; your task will be to configure your system to handle the requests of each of the methods:"),(0,n.kt)("div",{className:"shortcuts-overview"},(0,n.kt)("div",{className:"shortcuts-overview__content"},(0,n.kt)("a",{className:"item",href:"inventory"},(0,n.kt)("icon",{icon:"fa-brands fa-github",size:"lg"}),(0,n.kt)("p",{className:"item__title"},"Inventory"),(0,n.kt)("p",{className:"item__subtitle"},"Retrieve information about the inventory setup: hotel, rate and room.")),(0,n.kt)("a",{className:"item",href:"availability"},(0,n.kt)("icon",{icon:"fa-brands fa-github",size:"lg"}),(0,n.kt)("p",{className:"item__title"},"Availability"),(0,n.kt)("p",{className:"item__subtitle"},"Retrieve information about rate availability and allotment conditions.")),(0,n.kt)("a",{className:"item",href:"rates"},(0,n.kt)("icon",{icon:"fa-brands fa-github",size:"lg"}),(0,n.kt)("p",{className:"item__title"},"Rates"),(0,n.kt)("p",{className:"item__subtitle"},"Retrieve information about rate prices and supplements.")))),(0,n.kt)("p",null,"After each request, a response should be provided from your side. For instance, if a ",(0,n.kt)("inlineCode",{parentName:"p"},"HotelAvailNotif")," request is received, a corresponding ",(0,n.kt)("inlineCode",{parentName:"p"},"HotelAvailNotif")," response should be sent, and so forth. There are two response options, success or error."),(0,n.kt)("admonition",{type:"info"},(0,n.kt)("p",{parentName:"admonition"},"Keep in mind that after configuring your system to handle the requests, you will need to access the ",(0,n.kt)("a",{parentName:"p",href:"/docs/apis/for-buyers/channel-x-push-buyers-api/fullcopy-and-deltas"},"Full Copy tab")," to obtain all product details. Subsequently, Channel-X will send ",(0,n.kt)("a",{parentName:"p",href:"/docs/apis/for-buyers/channel-x-push-buyers-api/fullcopy-and-deltas"},"Delta")," requests for updates made by the Channel Manager.")))}y.isMDXComponent=!0}}]);