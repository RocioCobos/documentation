"use strict";(self.webpackChunkdocumentation=self.webpackChunkdocumentation||[]).push([[28142],{3905:(e,t,r)=>{r.d(t,{Zo:()=>p,kt:()=>h});var n=r(67294);function a(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function s(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function o(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?s(Object(r),!0).forEach((function(t){a(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):s(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function i(e,t){if(null==e)return{};var r,n,a=function(e,t){if(null==e)return{};var r,n,a={},s=Object.keys(e);for(n=0;n<s.length;n++)r=s[n],t.indexOf(r)>=0||(a[r]=e[r]);return a}(e,t);if(Object.getOwnPropertySymbols){var s=Object.getOwnPropertySymbols(e);for(n=0;n<s.length;n++)r=s[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(a[r]=e[r])}return a}var u=n.createContext({}),l=function(e){var t=n.useContext(u),r=t;return e&&(r="function"==typeof e?e(t):o(o({},t),e)),r},p=function(e){var t=l(e.components);return n.createElement(u.Provider,{value:t},e.children)},c="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},m=n.forwardRef((function(e,t){var r=e.components,a=e.mdxType,s=e.originalType,u=e.parentName,p=i(e,["components","mdxType","originalType","parentName"]),c=l(r),m=a,h=c["".concat(u,".").concat(m)]||c[m]||d[m]||s;return r?n.createElement(h,o(o({ref:t},p),{},{components:r})):n.createElement(h,o({ref:t},p))}));function h(e,t){var r=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var s=r.length,o=new Array(s);o[0]=m;var i={};for(var u in t)hasOwnProperty.call(t,u)&&(i[u]=t[u]);i.originalType=e,i[c]="string"==typeof e?e:a,o[1]=i;for(var l=2;l<s;l++)o[l]=r[l];return n.createElement.apply(null,o)}return n.createElement.apply(null,r)}m.displayName="MDXCreateElement"},53748:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>u,contentTitle:()=>o,default:()=>d,frontMatter:()=>s,metadata:()=>i,toc:()=>l});var n=r(87462),a=(r(67294),r(3905));const s={sidebar_position:2},o="Request Headers",i={unversionedId:"apis/for-buyers/channel-x-push-buyers-api/making-requests/request-headers",id:"apis/for-buyers/channel-x-push-buyers-api/making-requests/request-headers",title:"Request Headers",description:"The following request headers are essential for all request methods and must be included in every API request.",source:"@site/docs/apis/for-buyers/channel-x-push-buyers-api/making-requests/request-headers.md",sourceDirName:"apis/for-buyers/channel-x-push-buyers-api/making-requests",slug:"/apis/for-buyers/channel-x-push-buyers-api/making-requests/request-headers",permalink:"/docs/apis/for-buyers/channel-x-push-buyers-api/making-requests/request-headers",draft:!1,editUrl:"https://github.com/Travelgate/documentation/tree/main/docs/apis/for-buyers/channel-x-push-buyers-api/making-requests/request-headers.md",tags:[],version:"current",sidebarPosition:2,frontMatter:{sidebar_position:2},sidebar:"tutorialSidebar",previous:{title:"Endpoint",permalink:"/docs/apis/for-buyers/channel-x-push-buyers-api/making-requests/endpoint"},next:{title:"XML API",permalink:"/docs/apis/for-buyers/channel-x-push-buyers-api/making-requests/xml-api"}},u={},l=[{value:"Mandatory Request Headers",id:"mandatory-request-headers",level:3},{value:"Optional Request Headers",id:"optional-request-headers",level:3}],p={toc:l},c="wrapper";function d(e){let{components:t,...r}=e;return(0,a.kt)(c,(0,n.Z)({},p,r,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"request-headers"},"Request Headers"),(0,a.kt)("p",null,"The following request headers are essential for all request methods and must be included in every API request."),(0,a.kt)("h3",{id:"mandatory-request-headers"},"Mandatory Request Headers"),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"Content Type"),": The Content-Type header is set to:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-html"},"text/xml;charset=UTF-8\n")),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"SOAPAction"),": All requests come with a SOAPAction header corresponding to the transmitted message"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-html"},"???: ???\n")),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"Authentication"),": Requests are authenticated using Base64 encoding. The credentials can be found in the Authorization header tag."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-html"},"Authorization: Basic aHR0cHM6Ly93d3cueW91dHViZS5jb20vd2F0Y2g/dj1RWWg2bVlJSkcyWQ==\n")),(0,a.kt)("h3",{id:"optional-request-headers"},"Optional Request Headers"),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"Compression"),": By default, requests are not compressed. However, you can choose to compress requests using the following compression methods: gzip, deflate, and br."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-html"},"???: gzip\n")))}d.isMDXComponent=!0}}]);