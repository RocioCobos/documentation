"use strict";(self.webpackChunkdocumentation=self.webpackChunkdocumentation||[]).push([[89419],{3905:(e,t,r)=>{r.d(t,{Zo:()=>l,kt:()=>f});var n=r(67294);function a(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function i(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function s(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?i(Object(r),!0).forEach((function(t){a(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):i(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function o(e,t){if(null==e)return{};var r,n,a=function(e,t){if(null==e)return{};var r,n,a={},i=Object.keys(e);for(n=0;n<i.length;n++)r=i[n],t.indexOf(r)>=0||(a[r]=e[r]);return a}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(n=0;n<i.length;n++)r=i[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(a[r]=e[r])}return a}var u=n.createContext({}),p=function(e){var t=n.useContext(u),r=t;return e&&(r="function"==typeof e?e(t):s(s({},t),e)),r},l=function(e){var t=p(e.components);return n.createElement(u.Provider,{value:t},e.children)},c="mdxType",y={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},d=n.forwardRef((function(e,t){var r=e.components,a=e.mdxType,i=e.originalType,u=e.parentName,l=o(e,["components","mdxType","originalType","parentName"]),c=p(r),d=a,f=c["".concat(u,".").concat(d)]||c[d]||y[d]||i;return r?n.createElement(f,s(s({ref:t},l),{},{components:r})):n.createElement(f,s({ref:t},l))}));function f(e,t){var r=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var i=r.length,s=new Array(i);s[0]=d;var o={};for(var u in t)hasOwnProperty.call(t,u)&&(o[u]=t[u]);o.originalType=e,o[c]="string"==typeof e?e:a,s[1]=o;for(var p=2;p<i;p++)s[p]=r[p];return n.createElement.apply(null,s)}return n.createElement.apply(null,r)}d.displayName="MDXCreateElement"},29787:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>u,contentTitle:()=>s,default:()=>y,frontMatter:()=>i,metadata:()=>o,toc:()=>p});var n=r(87462),a=(r(67294),r(3905));const i={title:"XML API",sidebar_position:3},s="Channel-X XML API",o={unversionedId:"apis/for-buyers/channel-x-push-buyers-api/making-requests/xml-api",id:"apis/for-buyers/channel-x-push-buyers-api/making-requests/xml-api",title:"XML API",description:"Channel-X Push Buyers API is a travel API based on XML. All requests are expected to be standard HTTP POST requests, with the POST body containing the XML request within a SOAP envelope.",source:"@site/docs/apis/for-buyers/channel-x-push-buyers-api/making-requests/xml-api.mdx",sourceDirName:"apis/for-buyers/channel-x-push-buyers-api/making-requests",slug:"/apis/for-buyers/channel-x-push-buyers-api/making-requests/xml-api",permalink:"/docs/apis/for-buyers/channel-x-push-buyers-api/making-requests/xml-api",draft:!1,editUrl:"https://github.com/Travelgate/documentation/tree/main/docs/apis/for-buyers/channel-x-push-buyers-api/making-requests/xml-api.mdx",tags:[],version:"current",sidebarPosition:3,frontMatter:{title:"XML API",sidebar_position:3},sidebar:"docsSidebar",previous:{title:"Request Headers",permalink:"/docs/apis/for-buyers/channel-x-push-buyers-api/making-requests/request-headers"},next:{title:"Overview",permalink:"/docs/apis/for-buyers/channel-x-push-buyers-api/availability-rates-and-inventory/overview"}},u={},p=[],l={toc:p},c="wrapper";function y(e){let{components:t,...r}=e;return(0,a.kt)(c,(0,n.Z)({},l,r,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"channel-x-xml-api"},"Channel-X XML API"),(0,a.kt)("p",null,"Channel-X Push Buyers API is a travel API based on XML. All requests are expected to be standard HTTP POST requests, with the POST body containing the XML request within a SOAP envelope."),(0,a.kt)("p",null,"In the Channel-X Push Buyers API framework, we push information regarding Availability, Rates, and Inventory (ARI) to your system. We will initiate this process by sending you a request containing the relevant data. If the operation goes well, we expect a sucess response from your end; otherwise, we anticipate receiving an error notification."))}y.isMDXComponent=!0}}]);